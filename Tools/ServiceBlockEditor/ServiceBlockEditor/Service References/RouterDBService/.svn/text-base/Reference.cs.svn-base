//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace ServiceBlockEditor.RouterDBService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListOfService", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class ListOfService : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Service> LOSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Service> LOS {
            get {
                return this.LOSField;
            }
            set {
                if ((object.ReferenceEquals(this.LOSField, value) != true)) {
                    this.LOSField = value;
                    this.RaisePropertyChanged("LOS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class Service : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<string> expressionsField;
        
        private System.Guid idField;
        
        private string nameField;
        
        private System.Collections.Generic.Dictionary<System.Guid, string> serviceBlocksIdField;
        
        private string serviceNumberField;
        
        private System.Guid typeidField;
        
        private string typenameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> expressions {
            get {
                return this.expressionsField;
            }
            set {
                if ((object.ReferenceEquals(this.expressionsField, value) != true)) {
                    this.expressionsField = value;
                    this.RaisePropertyChanged("expressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<System.Guid, string> serviceBlocksId {
            get {
                return this.serviceBlocksIdField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceBlocksIdField, value) != true)) {
                    this.serviceBlocksIdField = value;
                    this.RaisePropertyChanged("serviceBlocksId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceNumber {
            get {
                return this.serviceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceNumberField, value) != true)) {
                    this.serviceNumberField = value;
                    this.RaisePropertyChanged("serviceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid typeid {
            get {
                return this.typeidField;
            }
            set {
                if ((this.typeidField.Equals(value) != true)) {
                    this.typeidField = value;
                    this.RaisePropertyChanged("typeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string typename {
            get {
                return this.typenameField;
            }
            set {
                if ((object.ReferenceEquals(this.typenameField, value) != true)) {
                    this.typenameField = value;
                    this.RaisePropertyChanged("typename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceBlock", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class ServiceBlock : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block> blocksField;
        
        private System.Guid idField;
        
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block> blocks {
            get {
                return this.blocksField;
            }
            set {
                if ((object.ReferenceEquals(this.blocksField, value) != true)) {
                    this.blocksField = value;
                    this.RaisePropertyChanged("blocks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Block", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class Block : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid blockEntryIdField;
        
        private System.Guid idField;
        
        private bool isVerificationField;
        
        private System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockLink> linksField;
        
        private string nameField;
        
        private ServiceBlockEditor.RouterDBService._BlockSettings settingsField;
        
        private string settingsStringField;
        
        private System.Guid typeidField;
        
        private string typenameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid blockEntryId {
            get {
                return this.blockEntryIdField;
            }
            set {
                if ((this.blockEntryIdField.Equals(value) != true)) {
                    this.blockEntryIdField = value;
                    this.RaisePropertyChanged("blockEntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isVerification {
            get {
                return this.isVerificationField;
            }
            set {
                if ((this.isVerificationField.Equals(value) != true)) {
                    this.isVerificationField = value;
                    this.RaisePropertyChanged("isVerification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockLink> links {
            get {
                return this.linksField;
            }
            set {
                if ((object.ReferenceEquals(this.linksField, value) != true)) {
                    this.linksField = value;
                    this.RaisePropertyChanged("links");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBlockEditor.RouterDBService._BlockSettings settings {
            get {
                return this.settingsField;
            }
            set {
                if ((object.ReferenceEquals(this.settingsField, value) != true)) {
                    this.settingsField = value;
                    this.RaisePropertyChanged("settings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string settingsString {
            get {
                return this.settingsStringField;
            }
            set {
                if ((object.ReferenceEquals(this.settingsStringField, value) != true)) {
                    this.settingsStringField = value;
                    this.RaisePropertyChanged("settingsString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid typeid {
            get {
                return this.typeidField;
            }
            set {
                if ((this.typeidField.Equals(value) != true)) {
                    this.typeidField = value;
                    this.RaisePropertyChanged("typeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string typename {
            get {
                return this.typenameField;
            }
            set {
                if ((object.ReferenceEquals(this.typenameField, value) != true)) {
                    this.typenameField = value;
                    this.RaisePropertyChanged("typename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="_BlockSettings", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class _BlockSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService._Condition> ConditionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService._Condition> Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockLink", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class BlockLink : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid idField;
        
        private System.Guid linkedBlockIdField;
        
        private System.Guid linkedEntryBlockIdField;
        
        private bool outputField;
        
        private bool yesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid linkedBlockId {
            get {
                return this.linkedBlockIdField;
            }
            set {
                if ((this.linkedBlockIdField.Equals(value) != true)) {
                    this.linkedBlockIdField = value;
                    this.RaisePropertyChanged("linkedBlockId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid linkedEntryBlockId {
            get {
                return this.linkedEntryBlockIdField;
            }
            set {
                if ((this.linkedEntryBlockIdField.Equals(value) != true)) {
                    this.linkedEntryBlockIdField = value;
                    this.RaisePropertyChanged("linkedEntryBlockId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool output {
            get {
                return this.outputField;
            }
            set {
                if ((this.outputField.Equals(value) != true)) {
                    this.outputField = value;
                    this.RaisePropertyChanged("output");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool yes {
            get {
                return this.yesField;
            }
            set {
                if ((this.yesField.Equals(value) != true)) {
                    this.yesField = value;
                    this.RaisePropertyChanged("yes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="_Condition", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class _Condition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string OperationField;
        
        private string PropertyField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property {
            get {
                return this.PropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyField, value) != true)) {
                    this.PropertyField = value;
                    this.RaisePropertyChanged("Property");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockSettingsParam", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class BlockSettingsParam : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid idField;
        
        private string typeField;
        
        private string valueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseParam", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class BaseParam : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BlockTypeField;
        
        private bool listParamField;
        
        private string nameField;
        
        private string paramSourceField;
        
        private System.Collections.Generic.Dictionary<System.Guid, string> paramTemplatesField;
        
        private bool requiredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockType {
            get {
                return this.BlockTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockTypeField, value) != true)) {
                    this.BlockTypeField = value;
                    this.RaisePropertyChanged("BlockType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool listParam {
            get {
                return this.listParamField;
            }
            set {
                if ((this.listParamField.Equals(value) != true)) {
                    this.listParamField = value;
                    this.RaisePropertyChanged("listParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paramSource {
            get {
                return this.paramSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.paramSourceField, value) != true)) {
                    this.paramSourceField = value;
                    this.RaisePropertyChanged("paramSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<System.Guid, string> paramTemplates {
            get {
                return this.paramTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.paramTemplatesField, value) != true)) {
                    this.paramTemplatesField = value;
                    this.RaisePropertyChanged("paramTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool required {
            get {
                return this.requiredField;
            }
            set {
                if ((this.requiredField.Equals(value) != true)) {
                    this.requiredField = value;
                    this.RaisePropertyChanged("required");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RouterDBService.IRouteDBService")]
    public interface IRouteDBService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/GetServices", ReplyAction="http://tempuri.org/IRouteDBService/GetServicesResponse")]
        System.IAsyncResult BeginGetServices(System.AsyncCallback callback, object asyncState);
        
        ServiceBlockEditor.RouterDBService.ListOfService EndGetServices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/GetServiceBlock", ReplyAction="http://tempuri.org/IRouteDBService/GetServiceBlockResponse")]
        System.IAsyncResult BeginGetServiceBlock(System.Guid ID, string Name, System.AsyncCallback callback, object asyncState);
        
        ServiceBlockEditor.RouterDBService.ServiceBlock EndGetServiceBlock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/GetAllBlocks", ReplyAction="http://tempuri.org/IRouteDBService/GetAllBlocksResponse")]
        System.IAsyncResult BeginGetAllBlocks(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block> EndGetAllBlocks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/GetAllBlockTypes", ReplyAction="http://tempuri.org/IRouteDBService/GetAllBlockTypesResponse")]
        System.IAsyncResult BeginGetAllBlockTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<System.Guid, string> EndGetAllBlockTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/GetBlockSettingsParams", ReplyAction="http://tempuri.org/IRouteDBService/GetBlockSettingsParamsResponse")]
        System.IAsyncResult BeginGetBlockSettingsParams(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockSettingsParam> EndGetBlockSettingsParams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/GetBlockInfo", ReplyAction="http://tempuri.org/IRouteDBService/GetBlockInfoResponse")]
        System.IAsyncResult BeginGetBlockInfo(string BlockType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BaseParam> EndGetBlockInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/RemoveBlockFromServiceBlock", ReplyAction="http://tempuri.org/IRouteDBService/RemoveBlockFromServiceBlockResponse")]
        System.IAsyncResult BeginRemoveBlockFromServiceBlock(System.Guid BlockEntryId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveBlockFromServiceBlock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/SaveServiceBlock", ReplyAction="http://tempuri.org/IRouteDBService/SaveServiceBlockResponse")]
        System.IAsyncResult BeginSaveServiceBlock(ServiceBlockEditor.RouterDBService.ServiceBlock serviceBlock, System.AsyncCallback callback, object asyncState);
        
        void EndSaveServiceBlock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/CreateNewBlock", ReplyAction="http://tempuri.org/IRouteDBService/CreateNewBlockResponse")]
        System.IAsyncResult BeginCreateNewBlock(ServiceBlockEditor.RouterDBService.Block Block, System.AsyncCallback callback, object asyncState);
        
        string EndCreateNewBlock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/GetSilverlightPolicy", ReplyAction="http://tempuri.org/IRouteDBService/GetSilverlightPolicyResponse")]
        System.IAsyncResult BeginGetSilverlightPolicy(System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetSilverlightPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRouteDBService/GetFlashPolicy", ReplyAction="http://tempuri.org/IRouteDBService/GetFlashPolicyResponse")]
        System.IAsyncResult BeginGetFlashPolicy(System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetFlashPolicy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRouteDBServiceChannel : ServiceBlockEditor.RouterDBService.IRouteDBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ServiceBlockEditor.RouterDBService.ListOfService Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ServiceBlockEditor.RouterDBService.ListOfService)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServiceBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServiceBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ServiceBlockEditor.RouterDBService.ServiceBlock Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ServiceBlockEditor.RouterDBService.ServiceBlock)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllBlocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllBlocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllBlockTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllBlockTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<System.Guid, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<System.Guid, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBlockSettingsParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBlockSettingsParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockSettingsParam> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockSettingsParam>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBlockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBlockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BaseParam> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BaseParam>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateNewBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateNewBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSilverlightPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSilverlightPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlashPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlashPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RouteDBServiceClient : System.ServiceModel.ClientBase<ServiceBlockEditor.RouterDBService.IRouteDBService>, ServiceBlockEditor.RouterDBService.IRouteDBService {
        
        private BeginOperationDelegate onBeginGetServicesDelegate;
        
        private EndOperationDelegate onEndGetServicesDelegate;
        
        private System.Threading.SendOrPostCallback onGetServicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServiceBlockDelegate;
        
        private EndOperationDelegate onEndGetServiceBlockDelegate;
        
        private System.Threading.SendOrPostCallback onGetServiceBlockCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllBlocksDelegate;
        
        private EndOperationDelegate onEndGetAllBlocksDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllBlocksCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllBlockTypesDelegate;
        
        private EndOperationDelegate onEndGetAllBlockTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllBlockTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBlockSettingsParamsDelegate;
        
        private EndOperationDelegate onEndGetBlockSettingsParamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBlockSettingsParamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBlockInfoDelegate;
        
        private EndOperationDelegate onEndGetBlockInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetBlockInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveBlockFromServiceBlockDelegate;
        
        private EndOperationDelegate onEndRemoveBlockFromServiceBlockDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveBlockFromServiceBlockCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveServiceBlockDelegate;
        
        private EndOperationDelegate onEndSaveServiceBlockDelegate;
        
        private System.Threading.SendOrPostCallback onSaveServiceBlockCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateNewBlockDelegate;
        
        private EndOperationDelegate onEndCreateNewBlockDelegate;
        
        private System.Threading.SendOrPostCallback onCreateNewBlockCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSilverlightPolicyDelegate;
        
        private EndOperationDelegate onEndGetSilverlightPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetSilverlightPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlashPolicyDelegate;
        
        private EndOperationDelegate onEndGetFlashPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlashPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RouteDBServiceClient() {
        }
        
        public RouteDBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RouteDBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouteDBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouteDBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetServicesCompletedEventArgs> GetServicesCompleted;
        
        public event System.EventHandler<GetServiceBlockCompletedEventArgs> GetServiceBlockCompleted;
        
        public event System.EventHandler<GetAllBlocksCompletedEventArgs> GetAllBlocksCompleted;
        
        public event System.EventHandler<GetAllBlockTypesCompletedEventArgs> GetAllBlockTypesCompleted;
        
        public event System.EventHandler<GetBlockSettingsParamsCompletedEventArgs> GetBlockSettingsParamsCompleted;
        
        public event System.EventHandler<GetBlockInfoCompletedEventArgs> GetBlockInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveBlockFromServiceBlockCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveServiceBlockCompleted;
        
        public event System.EventHandler<CreateNewBlockCompletedEventArgs> CreateNewBlockCompleted;
        
        public event System.EventHandler<GetSilverlightPolicyCompletedEventArgs> GetSilverlightPolicyCompleted;
        
        public event System.EventHandler<GetFlashPolicyCompletedEventArgs> GetFlashPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginGetServices(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServices(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceBlockEditor.RouterDBService.ListOfService ServiceBlockEditor.RouterDBService.IRouteDBService.EndGetServices(System.IAsyncResult result) {
            return base.Channel.EndGetServices(result);
        }
        
        private System.IAsyncResult OnBeginGetServices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginGetServices(callback, asyncState);
        }
        
        private object[] OnEndGetServices(System.IAsyncResult result) {
            ServiceBlockEditor.RouterDBService.ListOfService retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndGetServices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServicesCompleted(object state) {
            if ((this.GetServicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServicesCompleted(this, new GetServicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServicesAsync() {
            this.GetServicesAsync(null);
        }
        
        public void GetServicesAsync(object userState) {
            if ((this.onBeginGetServicesDelegate == null)) {
                this.onBeginGetServicesDelegate = new BeginOperationDelegate(this.OnBeginGetServices);
            }
            if ((this.onEndGetServicesDelegate == null)) {
                this.onEndGetServicesDelegate = new EndOperationDelegate(this.OnEndGetServices);
            }
            if ((this.onGetServicesCompletedDelegate == null)) {
                this.onGetServicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServicesCompleted);
            }
            base.InvokeAsync(this.onBeginGetServicesDelegate, null, this.onEndGetServicesDelegate, this.onGetServicesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginGetServiceBlock(System.Guid ID, string Name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServiceBlock(ID, Name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceBlockEditor.RouterDBService.ServiceBlock ServiceBlockEditor.RouterDBService.IRouteDBService.EndGetServiceBlock(System.IAsyncResult result) {
            return base.Channel.EndGetServiceBlock(result);
        }
        
        private System.IAsyncResult OnBeginGetServiceBlock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid ID = ((System.Guid)(inValues[0]));
            string Name = ((string)(inValues[1]));
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginGetServiceBlock(ID, Name, callback, asyncState);
        }
        
        private object[] OnEndGetServiceBlock(System.IAsyncResult result) {
            ServiceBlockEditor.RouterDBService.ServiceBlock retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndGetServiceBlock(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServiceBlockCompleted(object state) {
            if ((this.GetServiceBlockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServiceBlockCompleted(this, new GetServiceBlockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServiceBlockAsync(System.Guid ID, string Name) {
            this.GetServiceBlockAsync(ID, Name, null);
        }
        
        public void GetServiceBlockAsync(System.Guid ID, string Name, object userState) {
            if ((this.onBeginGetServiceBlockDelegate == null)) {
                this.onBeginGetServiceBlockDelegate = new BeginOperationDelegate(this.OnBeginGetServiceBlock);
            }
            if ((this.onEndGetServiceBlockDelegate == null)) {
                this.onEndGetServiceBlockDelegate = new EndOperationDelegate(this.OnEndGetServiceBlock);
            }
            if ((this.onGetServiceBlockCompletedDelegate == null)) {
                this.onGetServiceBlockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServiceBlockCompleted);
            }
            base.InvokeAsync(this.onBeginGetServiceBlockDelegate, new object[] {
                        ID,
                        Name}, this.onEndGetServiceBlockDelegate, this.onGetServiceBlockCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginGetAllBlocks(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllBlocks(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block> ServiceBlockEditor.RouterDBService.IRouteDBService.EndGetAllBlocks(System.IAsyncResult result) {
            return base.Channel.EndGetAllBlocks(result);
        }
        
        private System.IAsyncResult OnBeginGetAllBlocks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginGetAllBlocks(callback, asyncState);
        }
        
        private object[] OnEndGetAllBlocks(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block> retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndGetAllBlocks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllBlocksCompleted(object state) {
            if ((this.GetAllBlocksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllBlocksCompleted(this, new GetAllBlocksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllBlocksAsync() {
            this.GetAllBlocksAsync(null);
        }
        
        public void GetAllBlocksAsync(object userState) {
            if ((this.onBeginGetAllBlocksDelegate == null)) {
                this.onBeginGetAllBlocksDelegate = new BeginOperationDelegate(this.OnBeginGetAllBlocks);
            }
            if ((this.onEndGetAllBlocksDelegate == null)) {
                this.onEndGetAllBlocksDelegate = new EndOperationDelegate(this.OnEndGetAllBlocks);
            }
            if ((this.onGetAllBlocksCompletedDelegate == null)) {
                this.onGetAllBlocksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllBlocksCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllBlocksDelegate, null, this.onEndGetAllBlocksDelegate, this.onGetAllBlocksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginGetAllBlockTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllBlockTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<System.Guid, string> ServiceBlockEditor.RouterDBService.IRouteDBService.EndGetAllBlockTypes(System.IAsyncResult result) {
            return base.Channel.EndGetAllBlockTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetAllBlockTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginGetAllBlockTypes(callback, asyncState);
        }
        
        private object[] OnEndGetAllBlockTypes(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<System.Guid, string> retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndGetAllBlockTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllBlockTypesCompleted(object state) {
            if ((this.GetAllBlockTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllBlockTypesCompleted(this, new GetAllBlockTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllBlockTypesAsync() {
            this.GetAllBlockTypesAsync(null);
        }
        
        public void GetAllBlockTypesAsync(object userState) {
            if ((this.onBeginGetAllBlockTypesDelegate == null)) {
                this.onBeginGetAllBlockTypesDelegate = new BeginOperationDelegate(this.OnBeginGetAllBlockTypes);
            }
            if ((this.onEndGetAllBlockTypesDelegate == null)) {
                this.onEndGetAllBlockTypesDelegate = new EndOperationDelegate(this.OnEndGetAllBlockTypes);
            }
            if ((this.onGetAllBlockTypesCompletedDelegate == null)) {
                this.onGetAllBlockTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllBlockTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllBlockTypesDelegate, null, this.onEndGetAllBlockTypesDelegate, this.onGetAllBlockTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginGetBlockSettingsParams(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBlockSettingsParams(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockSettingsParam> ServiceBlockEditor.RouterDBService.IRouteDBService.EndGetBlockSettingsParams(System.IAsyncResult result) {
            return base.Channel.EndGetBlockSettingsParams(result);
        }
        
        private System.IAsyncResult OnBeginGetBlockSettingsParams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginGetBlockSettingsParams(callback, asyncState);
        }
        
        private object[] OnEndGetBlockSettingsParams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockSettingsParam> retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndGetBlockSettingsParams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBlockSettingsParamsCompleted(object state) {
            if ((this.GetBlockSettingsParamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBlockSettingsParamsCompleted(this, new GetBlockSettingsParamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBlockSettingsParamsAsync() {
            this.GetBlockSettingsParamsAsync(null);
        }
        
        public void GetBlockSettingsParamsAsync(object userState) {
            if ((this.onBeginGetBlockSettingsParamsDelegate == null)) {
                this.onBeginGetBlockSettingsParamsDelegate = new BeginOperationDelegate(this.OnBeginGetBlockSettingsParams);
            }
            if ((this.onEndGetBlockSettingsParamsDelegate == null)) {
                this.onEndGetBlockSettingsParamsDelegate = new EndOperationDelegate(this.OnEndGetBlockSettingsParams);
            }
            if ((this.onGetBlockSettingsParamsCompletedDelegate == null)) {
                this.onGetBlockSettingsParamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBlockSettingsParamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBlockSettingsParamsDelegate, null, this.onEndGetBlockSettingsParamsDelegate, this.onGetBlockSettingsParamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginGetBlockInfo(string BlockType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBlockInfo(BlockType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BaseParam> ServiceBlockEditor.RouterDBService.IRouteDBService.EndGetBlockInfo(System.IAsyncResult result) {
            return base.Channel.EndGetBlockInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetBlockInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string BlockType = ((string)(inValues[0]));
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginGetBlockInfo(BlockType, callback, asyncState);
        }
        
        private object[] OnEndGetBlockInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BaseParam> retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndGetBlockInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBlockInfoCompleted(object state) {
            if ((this.GetBlockInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBlockInfoCompleted(this, new GetBlockInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBlockInfoAsync(string BlockType) {
            this.GetBlockInfoAsync(BlockType, null);
        }
        
        public void GetBlockInfoAsync(string BlockType, object userState) {
            if ((this.onBeginGetBlockInfoDelegate == null)) {
                this.onBeginGetBlockInfoDelegate = new BeginOperationDelegate(this.OnBeginGetBlockInfo);
            }
            if ((this.onEndGetBlockInfoDelegate == null)) {
                this.onEndGetBlockInfoDelegate = new EndOperationDelegate(this.OnEndGetBlockInfo);
            }
            if ((this.onGetBlockInfoCompletedDelegate == null)) {
                this.onGetBlockInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBlockInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetBlockInfoDelegate, new object[] {
                        BlockType}, this.onEndGetBlockInfoDelegate, this.onGetBlockInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginRemoveBlockFromServiceBlock(System.Guid BlockEntryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveBlockFromServiceBlock(BlockEntryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ServiceBlockEditor.RouterDBService.IRouteDBService.EndRemoveBlockFromServiceBlock(System.IAsyncResult result) {
            base.Channel.EndRemoveBlockFromServiceBlock(result);
        }
        
        private System.IAsyncResult OnBeginRemoveBlockFromServiceBlock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid BlockEntryId = ((System.Guid)(inValues[0]));
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginRemoveBlockFromServiceBlock(BlockEntryId, callback, asyncState);
        }
        
        private object[] OnEndRemoveBlockFromServiceBlock(System.IAsyncResult result) {
            ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndRemoveBlockFromServiceBlock(result);
            return null;
        }
        
        private void OnRemoveBlockFromServiceBlockCompleted(object state) {
            if ((this.RemoveBlockFromServiceBlockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveBlockFromServiceBlockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveBlockFromServiceBlockAsync(System.Guid BlockEntryId) {
            this.RemoveBlockFromServiceBlockAsync(BlockEntryId, null);
        }
        
        public void RemoveBlockFromServiceBlockAsync(System.Guid BlockEntryId, object userState) {
            if ((this.onBeginRemoveBlockFromServiceBlockDelegate == null)) {
                this.onBeginRemoveBlockFromServiceBlockDelegate = new BeginOperationDelegate(this.OnBeginRemoveBlockFromServiceBlock);
            }
            if ((this.onEndRemoveBlockFromServiceBlockDelegate == null)) {
                this.onEndRemoveBlockFromServiceBlockDelegate = new EndOperationDelegate(this.OnEndRemoveBlockFromServiceBlock);
            }
            if ((this.onRemoveBlockFromServiceBlockCompletedDelegate == null)) {
                this.onRemoveBlockFromServiceBlockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveBlockFromServiceBlockCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveBlockFromServiceBlockDelegate, new object[] {
                        BlockEntryId}, this.onEndRemoveBlockFromServiceBlockDelegate, this.onRemoveBlockFromServiceBlockCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginSaveServiceBlock(ServiceBlockEditor.RouterDBService.ServiceBlock serviceBlock, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveServiceBlock(serviceBlock, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ServiceBlockEditor.RouterDBService.IRouteDBService.EndSaveServiceBlock(System.IAsyncResult result) {
            base.Channel.EndSaveServiceBlock(result);
        }
        
        private System.IAsyncResult OnBeginSaveServiceBlock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ServiceBlockEditor.RouterDBService.ServiceBlock serviceBlock = ((ServiceBlockEditor.RouterDBService.ServiceBlock)(inValues[0]));
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginSaveServiceBlock(serviceBlock, callback, asyncState);
        }
        
        private object[] OnEndSaveServiceBlock(System.IAsyncResult result) {
            ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndSaveServiceBlock(result);
            return null;
        }
        
        private void OnSaveServiceBlockCompleted(object state) {
            if ((this.SaveServiceBlockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveServiceBlockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveServiceBlockAsync(ServiceBlockEditor.RouterDBService.ServiceBlock serviceBlock) {
            this.SaveServiceBlockAsync(serviceBlock, null);
        }
        
        public void SaveServiceBlockAsync(ServiceBlockEditor.RouterDBService.ServiceBlock serviceBlock, object userState) {
            if ((this.onBeginSaveServiceBlockDelegate == null)) {
                this.onBeginSaveServiceBlockDelegate = new BeginOperationDelegate(this.OnBeginSaveServiceBlock);
            }
            if ((this.onEndSaveServiceBlockDelegate == null)) {
                this.onEndSaveServiceBlockDelegate = new EndOperationDelegate(this.OnEndSaveServiceBlock);
            }
            if ((this.onSaveServiceBlockCompletedDelegate == null)) {
                this.onSaveServiceBlockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveServiceBlockCompleted);
            }
            base.InvokeAsync(this.onBeginSaveServiceBlockDelegate, new object[] {
                        serviceBlock}, this.onEndSaveServiceBlockDelegate, this.onSaveServiceBlockCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginCreateNewBlock(ServiceBlockEditor.RouterDBService.Block Block, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateNewBlock(Block, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string ServiceBlockEditor.RouterDBService.IRouteDBService.EndCreateNewBlock(System.IAsyncResult result) {
            return base.Channel.EndCreateNewBlock(result);
        }
        
        private System.IAsyncResult OnBeginCreateNewBlock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ServiceBlockEditor.RouterDBService.Block Block = ((ServiceBlockEditor.RouterDBService.Block)(inValues[0]));
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginCreateNewBlock(Block, callback, asyncState);
        }
        
        private object[] OnEndCreateNewBlock(System.IAsyncResult result) {
            string retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndCreateNewBlock(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateNewBlockCompleted(object state) {
            if ((this.CreateNewBlockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateNewBlockCompleted(this, new CreateNewBlockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateNewBlockAsync(ServiceBlockEditor.RouterDBService.Block Block) {
            this.CreateNewBlockAsync(Block, null);
        }
        
        public void CreateNewBlockAsync(ServiceBlockEditor.RouterDBService.Block Block, object userState) {
            if ((this.onBeginCreateNewBlockDelegate == null)) {
                this.onBeginCreateNewBlockDelegate = new BeginOperationDelegate(this.OnBeginCreateNewBlock);
            }
            if ((this.onEndCreateNewBlockDelegate == null)) {
                this.onEndCreateNewBlockDelegate = new EndOperationDelegate(this.OnEndCreateNewBlock);
            }
            if ((this.onCreateNewBlockCompletedDelegate == null)) {
                this.onCreateNewBlockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateNewBlockCompleted);
            }
            base.InvokeAsync(this.onBeginCreateNewBlockDelegate, new object[] {
                        Block}, this.onEndCreateNewBlockDelegate, this.onCreateNewBlockCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginGetSilverlightPolicy(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSilverlightPolicy(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] ServiceBlockEditor.RouterDBService.IRouteDBService.EndGetSilverlightPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetSilverlightPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetSilverlightPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginGetSilverlightPolicy(callback, asyncState);
        }
        
        private object[] OnEndGetSilverlightPolicy(System.IAsyncResult result) {
            byte[] retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndGetSilverlightPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSilverlightPolicyCompleted(object state) {
            if ((this.GetSilverlightPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSilverlightPolicyCompleted(this, new GetSilverlightPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSilverlightPolicyAsync() {
            this.GetSilverlightPolicyAsync(null);
        }
        
        public void GetSilverlightPolicyAsync(object userState) {
            if ((this.onBeginGetSilverlightPolicyDelegate == null)) {
                this.onBeginGetSilverlightPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetSilverlightPolicy);
            }
            if ((this.onEndGetSilverlightPolicyDelegate == null)) {
                this.onEndGetSilverlightPolicyDelegate = new EndOperationDelegate(this.OnEndGetSilverlightPolicy);
            }
            if ((this.onGetSilverlightPolicyCompletedDelegate == null)) {
                this.onGetSilverlightPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSilverlightPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetSilverlightPolicyDelegate, null, this.onEndGetSilverlightPolicyDelegate, this.onGetSilverlightPolicyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ServiceBlockEditor.RouterDBService.IRouteDBService.BeginGetFlashPolicy(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlashPolicy(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] ServiceBlockEditor.RouterDBService.IRouteDBService.EndGetFlashPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetFlashPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetFlashPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).BeginGetFlashPolicy(callback, asyncState);
        }
        
        private object[] OnEndGetFlashPolicy(System.IAsyncResult result) {
            byte[] retVal = ((ServiceBlockEditor.RouterDBService.IRouteDBService)(this)).EndGetFlashPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlashPolicyCompleted(object state) {
            if ((this.GetFlashPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlashPolicyCompleted(this, new GetFlashPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlashPolicyAsync() {
            this.GetFlashPolicyAsync(null);
        }
        
        public void GetFlashPolicyAsync(object userState) {
            if ((this.onBeginGetFlashPolicyDelegate == null)) {
                this.onBeginGetFlashPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetFlashPolicy);
            }
            if ((this.onEndGetFlashPolicyDelegate == null)) {
                this.onEndGetFlashPolicyDelegate = new EndOperationDelegate(this.OnEndGetFlashPolicy);
            }
            if ((this.onGetFlashPolicyCompletedDelegate == null)) {
                this.onGetFlashPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlashPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlashPolicyDelegate, null, this.onEndGetFlashPolicyDelegate, this.onGetFlashPolicyCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ServiceBlockEditor.RouterDBService.IRouteDBService CreateChannel() {
            return new RouteDBServiceClientChannel(this);
        }
        
        private class RouteDBServiceClientChannel : ChannelBase<ServiceBlockEditor.RouterDBService.IRouteDBService>, ServiceBlockEditor.RouterDBService.IRouteDBService {
            
            public RouteDBServiceClientChannel(System.ServiceModel.ClientBase<ServiceBlockEditor.RouterDBService.IRouteDBService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetServices(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetServices", _args, callback, asyncState);
                return _result;
            }
            
            public ServiceBlockEditor.RouterDBService.ListOfService EndGetServices(System.IAsyncResult result) {
                object[] _args = new object[0];
                ServiceBlockEditor.RouterDBService.ListOfService _result = ((ServiceBlockEditor.RouterDBService.ListOfService)(base.EndInvoke("GetServices", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetServiceBlock(System.Guid ID, string Name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ID;
                _args[1] = Name;
                System.IAsyncResult _result = base.BeginInvoke("GetServiceBlock", _args, callback, asyncState);
                return _result;
            }
            
            public ServiceBlockEditor.RouterDBService.ServiceBlock EndGetServiceBlock(System.IAsyncResult result) {
                object[] _args = new object[0];
                ServiceBlockEditor.RouterDBService.ServiceBlock _result = ((ServiceBlockEditor.RouterDBService.ServiceBlock)(base.EndInvoke("GetServiceBlock", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllBlocks(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllBlocks", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block> EndGetAllBlocks(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block> _result = ((System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.Block>)(base.EndInvoke("GetAllBlocks", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllBlockTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllBlockTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<System.Guid, string> EndGetAllBlockTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<System.Guid, string> _result = ((System.Collections.Generic.Dictionary<System.Guid, string>)(base.EndInvoke("GetAllBlockTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBlockSettingsParams(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBlockSettingsParams", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockSettingsParam> EndGetBlockSettingsParams(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockSettingsParam> _result = ((System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BlockSettingsParam>)(base.EndInvoke("GetBlockSettingsParams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBlockInfo(string BlockType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = BlockType;
                System.IAsyncResult _result = base.BeginInvoke("GetBlockInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BaseParam> EndGetBlockInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BaseParam> _result = ((System.Collections.ObjectModel.ObservableCollection<ServiceBlockEditor.RouterDBService.BaseParam>)(base.EndInvoke("GetBlockInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveBlockFromServiceBlock(System.Guid BlockEntryId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = BlockEntryId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveBlockFromServiceBlock", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveBlockFromServiceBlock(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveBlockFromServiceBlock", _args, result);
            }
            
            public System.IAsyncResult BeginSaveServiceBlock(ServiceBlockEditor.RouterDBService.ServiceBlock serviceBlock, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = serviceBlock;
                System.IAsyncResult _result = base.BeginInvoke("SaveServiceBlock", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveServiceBlock(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveServiceBlock", _args, result);
            }
            
            public System.IAsyncResult BeginCreateNewBlock(ServiceBlockEditor.RouterDBService.Block Block, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Block;
                System.IAsyncResult _result = base.BeginInvoke("CreateNewBlock", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCreateNewBlock(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CreateNewBlock", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSilverlightPolicy(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSilverlightPolicy", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetSilverlightPolicy(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetSilverlightPolicy", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlashPolicy(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFlashPolicy", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetFlashPolicy(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetFlashPolicy", _args, result)));
                return _result;
            }
        }
    }
}
