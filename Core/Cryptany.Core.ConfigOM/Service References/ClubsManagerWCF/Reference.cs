//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptany.Core.ConfigOM.ClubsManagerWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Abonent", Namespace="http://schemas.datacontract.org/2004/07/Cryptany.Core.Foundation.Clubs2")]
    [System.SerializableAttribute()]
    public partial class Abonent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AbonentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cryptany.Core.ConfigOM.ClubsManagerWCF.DefCode DefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MSISDNField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AbonentId {
            get {
                return this.AbonentIdField;
            }
            set {
                if ((this.AbonentIdField.Equals(value) != true)) {
                    this.AbonentIdField = value;
                    this.RaisePropertyChanged("AbonentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.DefCode DefCode {
            get {
                return this.DefCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefCodeField, value) != true)) {
                    this.DefCodeField = value;
                    this.RaisePropertyChanged("DefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MSISDN {
            get {
                return this.MSISDNField;
            }
            set {
                if ((object.ReferenceEquals(this.MSISDNField, value) != true)) {
                    this.MSISDNField = value;
                    this.RaisePropertyChanged("MSISDN");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefCode", Namespace="http://schemas.datacontract.org/2004/07/Cryptany.Core.Foundation.Clubs2")]
    [System.SerializableAttribute()]
    public partial class DefCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DEFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MacroRegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MacroRegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OperatorBrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorBrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OperatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RangeEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RangeStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DEF {
            get {
                return this.DEFField;
            }
            set {
                if ((this.DEFField.Equals(value) != true)) {
                    this.DEFField = value;
                    this.RaisePropertyChanged("DEF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MacroRegionId {
            get {
                return this.MacroRegionIdField;
            }
            set {
                if ((this.MacroRegionIdField.Equals(value) != true)) {
                    this.MacroRegionIdField = value;
                    this.RaisePropertyChanged("MacroRegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MacroRegionName {
            get {
                return this.MacroRegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MacroRegionNameField, value) != true)) {
                    this.MacroRegionNameField = value;
                    this.RaisePropertyChanged("MacroRegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OperatorBrandId {
            get {
                return this.OperatorBrandIdField;
            }
            set {
                if ((this.OperatorBrandIdField.Equals(value) != true)) {
                    this.OperatorBrandIdField = value;
                    this.RaisePropertyChanged("OperatorBrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorBrandName {
            get {
                return this.OperatorBrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorBrandNameField, value) != true)) {
                    this.OperatorBrandNameField = value;
                    this.RaisePropertyChanged("OperatorBrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OperatorId {
            get {
                return this.OperatorIdField;
            }
            set {
                if ((this.OperatorIdField.Equals(value) != true)) {
                    this.OperatorIdField = value;
                    this.RaisePropertyChanged("OperatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RangeEnd {
            get {
                return this.RangeEndField;
            }
            set {
                if ((this.RangeEndField.Equals(value) != true)) {
                    this.RangeEndField = value;
                    this.RaisePropertyChanged("RangeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RangeStart {
            get {
                return this.RangeStartField;
            }
            set {
                if ((this.RangeStartField.Equals(value) != true)) {
                    this.RangeStartField = value;
                    this.RaisePropertyChanged("RangeStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Club", Namespace="http://schemas.datacontract.org/2004/07/Cryptany.Core.Foundation.Clubs2")]
    [System.SerializableAttribute()]
    public partial class Club : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OperatorBrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ResourceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsView {
            get {
                return this.IsViewField;
            }
            set {
                if ((this.IsViewField.Equals(value) != true)) {
                    this.IsViewField = value;
                    this.RaisePropertyChanged("IsView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OperatorBrandId {
            get {
                return this.OperatorBrandIdField;
            }
            set {
                if ((this.OperatorBrandIdField.Equals(value) != true)) {
                    this.OperatorBrandIdField = value;
                    this.RaisePropertyChanged("OperatorBrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ResourceId {
            get {
                return this.ResourceIdField;
            }
            set {
                if ((this.ResourceIdField.Equals(value) != true)) {
                    this.ResourceIdField = value;
                    this.RaisePropertyChanged("ResourceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subscription", Namespace="http://schemas.datacontract.org/2004/07/Cryptany.Core.Foundation.Clubs2")]
    [System.SerializableAttribute()]
    public partial class Subscription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cryptany.Core.ConfigOM.ClubsManagerWCF.Club ClubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MSISDNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubscribeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubscribeResourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubscribeSmsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UnsubscribeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UnsubscribeResourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UnsubscribeSmsIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Club Club {
            get {
                return this.ClubField;
            }
            set {
                if ((object.ReferenceEquals(this.ClubField, value) != true)) {
                    this.ClubField = value;
                    this.RaisePropertyChanged("Club");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MSISDN {
            get {
                return this.MSISDNField;
            }
            set {
                if ((object.ReferenceEquals(this.MSISDNField, value) != true)) {
                    this.MSISDNField = value;
                    this.RaisePropertyChanged("MSISDN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubscribeDate {
            get {
                return this.SubscribeDateField;
            }
            set {
                if ((this.SubscribeDateField.Equals(value) != true)) {
                    this.SubscribeDateField = value;
                    this.RaisePropertyChanged("SubscribeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubscribeResourceId {
            get {
                return this.SubscribeResourceIdField;
            }
            set {
                if ((this.SubscribeResourceIdField.Equals(value) != true)) {
                    this.SubscribeResourceIdField = value;
                    this.RaisePropertyChanged("SubscribeResourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubscribeSmsId {
            get {
                return this.SubscribeSmsIdField;
            }
            set {
                if ((this.SubscribeSmsIdField.Equals(value) != true)) {
                    this.SubscribeSmsIdField = value;
                    this.RaisePropertyChanged("SubscribeSmsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UnsubscribeDate {
            get {
                return this.UnsubscribeDateField;
            }
            set {
                if ((this.UnsubscribeDateField.Equals(value) != true)) {
                    this.UnsubscribeDateField = value;
                    this.RaisePropertyChanged("UnsubscribeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UnsubscribeResourceId {
            get {
                return this.UnsubscribeResourceIdField;
            }
            set {
                if ((this.UnsubscribeResourceIdField.Equals(value) != true)) {
                    this.UnsubscribeResourceIdField = value;
                    this.RaisePropertyChanged("UnsubscribeResourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UnsubscribeSmsId {
            get {
                return this.UnsubscribeSmsIdField;
            }
            set {
                if ((this.UnsubscribeSmsIdField.Equals(value) != true)) {
                    this.UnsubscribeSmsIdField = value;
                    this.RaisePropertyChanged("UnsubscribeSmsId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tariffication", Namespace="http://schemas.datacontract.org/2004/07/Cryptany.Core.Foundation.Clubs2")]
    [System.SerializableAttribute()]
    public partial class Tariffication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cryptany.Core.ConfigOM.ClubsManagerWCF.Club ClubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MessageTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Club Club {
            get {
                return this.ClubField;
            }
            set {
                if ((object.ReferenceEquals(this.ClubField, value) != true)) {
                    this.ClubField = value;
                    this.RaisePropertyChanged("Club");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Delivered {
            get {
                return this.DeliveredField;
            }
            set {
                if ((this.DeliveredField.Equals(value) != true)) {
                    this.DeliveredField = value;
                    this.RaisePropertyChanged("Delivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MessageTime {
            get {
                return this.MessageTimeField;
            }
            set {
                if ((this.MessageTimeField.Equals(value) != true)) {
                    this.MessageTimeField = value;
                    this.RaisePropertyChanged("MessageTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClubsManagerWCF.IClubsManager2")]
    public interface IClubsManager2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetAbonentById", ReplyAction="http://tempuri.org/IClubsManager2/GetAbonentByIdResponse")]
        Cryptany.Core.ConfigOM.ClubsManagerWCF.Abonent GetAbonentById(System.Guid AbonentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetAbonentByMSISDN", ReplyAction="http://tempuri.org/IClubsManager2/GetAbonentByMSISDNResponse")]
        Cryptany.Core.ConfigOM.ClubsManagerWCF.Abonent GetAbonentByMSISDN(string MSISDN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetAbonentByMSISDNWithAutoCreate", ReplyAction="http://tempuri.org/IClubsManager2/GetAbonentByMSISDNWithAutoCreateResponse")]
        Cryptany.Core.ConfigOM.ClubsManagerWCF.Abonent GetAbonentByMSISDNWithAutoCreate(string MSISDN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetDefCodeByMSISDN", ReplyAction="http://tempuri.org/IClubsManager2/GetDefCodeByMSISDNResponse")]
        Cryptany.Core.ConfigOM.ClubsManagerWCF.DefCode GetDefCodeByMSISDN(string MSISDN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/IsAllowSubscribe", ReplyAction="http://tempuri.org/IClubsManager2/IsAllowSubscribeResponse")]
        bool IsAllowSubscribe(out string ErrorText, System.Guid ClubId, string MSISDN, System.Guid ResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/IsAllowSubscribeForResource", ReplyAction="http://tempuri.org/IClubsManager2/IsAllowSubscribeForResourceResponse")]
        bool IsAllowSubscribeForResource(System.Guid ClubId, System.Guid ResourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/IsAllowSubscribeForOperatorBrand", ReplyAction="http://tempuri.org/IClubsManager2/IsAllowSubscribeForOperatorBrandResponse")]
        bool IsAllowSubscribeForOperatorBrand(System.Guid ClubId, System.Guid OperatorBrandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetClubById", ReplyAction="http://tempuri.org/IClubsManager2/GetClubByIdResponse")]
        Cryptany.Core.ConfigOM.ClubsManagerWCF.Club GetClubById(System.Guid ClubId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetClubs", ReplyAction="http://tempuri.org/IClubsManager2/GetClubsResponse")]
        System.Collections.Generic.Dictionary<System.Guid, Cryptany.Core.ConfigOM.ClubsManagerWCF.Club> GetClubs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetSubscriptions", ReplyAction="http://tempuri.org/IClubsManager2/GetSubscriptionsResponse")]
        System.Collections.Generic.Dictionary<System.Guid, Cryptany.Core.ConfigOM.ClubsManagerWCF.Subscription> GetSubscriptions(string MSISDN, bool ShowAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetSubscriptionsByClub", ReplyAction="http://tempuri.org/IClubsManager2/GetSubscriptionsByClubResponse")]
        System.Collections.Generic.Dictionary<System.Guid, Cryptany.Core.ConfigOM.ClubsManagerWCF.Subscription> GetSubscriptionsByClub(string MSISDN, bool ShowAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetSubscription", ReplyAction="http://tempuri.org/IClubsManager2/GetSubscriptionResponse")]
        Cryptany.Core.ConfigOM.ClubsManagerWCF.Subscription GetSubscription(string MSISDN, System.Guid ClubId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/Subscribe", ReplyAction="http://tempuri.org/IClubsManager2/SubscribeResponse")]
        System.Guid Subscribe(string MSISDN, System.Guid ClubId, System.Guid ResourceId, System.Guid SmsId, System.DateTime SubscribeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/Unsubscribe", ReplyAction="http://tempuri.org/IClubsManager2/UnsubscribeResponse")]
        void Unsubscribe(string MSISDN, System.Guid ClubId, System.Guid ResourceId, System.Guid SmsId, System.DateTime UnsubscribeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/UnsubscribeAll", ReplyAction="http://tempuri.org/IClubsManager2/UnsubscribeAllResponse")]
        void UnsubscribeAll(string MSISDN, System.Guid ResourceId, System.Guid SmsId, System.DateTime UnsubscribeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetNextReloadTime", ReplyAction="http://tempuri.org/IClubsManager2/GetNextReloadTimeResponse")]
        System.DateTime GetNextReloadTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetTariffications", ReplyAction="http://tempuri.org/IClubsManager2/GetTarifficationsResponse")]
        Cryptany.Core.ConfigOM.ClubsManagerWCF.Tariffication[] GetTariffications(string MSISDN, bool ShowAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClubsManager2/GetTarifficationsByClub", ReplyAction="http://tempuri.org/IClubsManager2/GetTarifficationsByClubResponse")]
        Cryptany.Core.ConfigOM.ClubsManagerWCF.Tariffication[] GetTarifficationsByClub(string MSISDN, System.Guid ClubId, bool ShowAll);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClubsManager2Channel : Cryptany.Core.ConfigOM.ClubsManagerWCF.IClubsManager2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClubsManager2Client : System.ServiceModel.ClientBase<Cryptany.Core.ConfigOM.ClubsManagerWCF.IClubsManager2>, Cryptany.Core.ConfigOM.ClubsManagerWCF.IClubsManager2 {
        
        public ClubsManager2Client() {
        }
        
        public ClubsManager2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClubsManager2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClubsManager2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClubsManager2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Abonent GetAbonentById(System.Guid AbonentId) {
            return base.Channel.GetAbonentById(AbonentId);
        }
        
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Abonent GetAbonentByMSISDN(string MSISDN) {
            return base.Channel.GetAbonentByMSISDN(MSISDN);
        }
        
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Abonent GetAbonentByMSISDNWithAutoCreate(string MSISDN) {
            return base.Channel.GetAbonentByMSISDNWithAutoCreate(MSISDN);
        }
        
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.DefCode GetDefCodeByMSISDN(string MSISDN) {
            return base.Channel.GetDefCodeByMSISDN(MSISDN);
        }
        
        public bool IsAllowSubscribe(out string ErrorText, System.Guid ClubId, string MSISDN, System.Guid ResourceId) {
            return base.Channel.IsAllowSubscribe(out ErrorText, ClubId, MSISDN, ResourceId);
        }
        
        public bool IsAllowSubscribeForResource(System.Guid ClubId, System.Guid ResourceId) {
            return base.Channel.IsAllowSubscribeForResource(ClubId, ResourceId);
        }
        
        public bool IsAllowSubscribeForOperatorBrand(System.Guid ClubId, System.Guid OperatorBrandId) {
            return base.Channel.IsAllowSubscribeForOperatorBrand(ClubId, OperatorBrandId);
        }
        
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Club GetClubById(System.Guid ClubId) {
            return base.Channel.GetClubById(ClubId);
        }
        
        public System.Collections.Generic.Dictionary<System.Guid, Cryptany.Core.ConfigOM.ClubsManagerWCF.Club> GetClubs() {
            return base.Channel.GetClubs();
        }
        
        public System.Collections.Generic.Dictionary<System.Guid, Cryptany.Core.ConfigOM.ClubsManagerWCF.Subscription> GetSubscriptions(string MSISDN, bool ShowAll) {
            return base.Channel.GetSubscriptions(MSISDN, ShowAll);
        }
        
        public System.Collections.Generic.Dictionary<System.Guid, Cryptany.Core.ConfigOM.ClubsManagerWCF.Subscription> GetSubscriptionsByClub(string MSISDN, bool ShowAll) {
            return base.Channel.GetSubscriptionsByClub(MSISDN, ShowAll);
        }
        
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Subscription GetSubscription(string MSISDN, System.Guid ClubId) {
            return base.Channel.GetSubscription(MSISDN, ClubId);
        }
        
        public System.Guid Subscribe(string MSISDN, System.Guid ClubId, System.Guid ResourceId, System.Guid SmsId, System.DateTime SubscribeDate) {
            return base.Channel.Subscribe(MSISDN, ClubId, ResourceId, SmsId, SubscribeDate);
        }
        
        public void Unsubscribe(string MSISDN, System.Guid ClubId, System.Guid ResourceId, System.Guid SmsId, System.DateTime UnsubscribeDate) {
            base.Channel.Unsubscribe(MSISDN, ClubId, ResourceId, SmsId, UnsubscribeDate);
        }
        
        public void UnsubscribeAll(string MSISDN, System.Guid ResourceId, System.Guid SmsId, System.DateTime UnsubscribeDate) {
            base.Channel.UnsubscribeAll(MSISDN, ResourceId, SmsId, UnsubscribeDate);
        }
        
        public System.DateTime GetNextReloadTime() {
            return base.Channel.GetNextReloadTime();
        }
        
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Tariffication[] GetTariffications(string MSISDN, bool ShowAll) {
            return base.Channel.GetTariffications(MSISDN, ShowAll);
        }
        
        public Cryptany.Core.ConfigOM.ClubsManagerWCF.Tariffication[] GetTarifficationsByClub(string MSISDN, System.Guid ClubId, bool ShowAll) {
            return base.Channel.GetTarifficationsByClub(MSISDN, ClubId, ShowAll);
        }
    }
}
