/*
   Copyright 2006-2017 Cryptany, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RouterModel", "FK_Block_BlockType_BlockTypeId", "BlockType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.BlockType), "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.Block), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_BlocksToServiceBlocks_Block", "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.Block), "BlockEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.BlockEntry), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_BlocksToServiceBlocks_BlockLink_ChildId", "BlockEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.BlockEntry), "BlockLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.BlockLink), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_BlocksToServiceBlocks_BlockLink_ParentId", "BlockEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.BlockEntry), "BlockLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.BlockLink), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_BlocksToServiceBlocks_ServiceBlock", "ServiceBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.ServiceBlock), "BlockEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.BlockEntry), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_Service_ServiceType_ServiceTypeId", "ServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.ServiceType), "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.TVService), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_ServiceBlock_Service_ServiceId", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.TVService), "ServiceBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.ServiceBlock), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_Service_ServiceNumbers_ServiceNumberId", "ServiceNumbers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cryptany.Core.Router.Data.ServiceNumber), "TVService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.TVService), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_Tariff_ServiceNumbers_ServiceNumberId", "ServiceNumbers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.ServiceNumber), "Tariff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.Tariff), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_Service_Service_TokenId", "Token", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cryptany.Core.Router.Data.Token), "TVService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.TVService), true)]
[assembly: EdmRelationshipAttribute("RouterModel", "FK_TokenRegex_TokenId", "Token", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cryptany.Core.Router.Data.Token), "TokenRegex", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cryptany.Core.Router.Data.TokenRegex), true)]

#endregion

namespace Cryptany.Core.Router.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Block> Block
        {
            get
            {
                if ((_Block == null))
                {
                    _Block = base.CreateObjectSet<Block>("Block");
                }
                return _Block;
            }
        }
        private ObjectSet<Block> _Block;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlockEntry> BlockEntry
        {
            get
            {
                if ((_BlockEntry == null))
                {
                    _BlockEntry = base.CreateObjectSet<BlockEntry>("BlockEntry");
                }
                return _BlockEntry;
            }
        }
        private ObjectSet<BlockEntry> _BlockEntry;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlockLink> BlockLink
        {
            get
            {
                if ((_BlockLink == null))
                {
                    _BlockLink = base.CreateObjectSet<BlockLink>("BlockLink");
                }
                return _BlockLink;
            }
        }
        private ObjectSet<BlockLink> _BlockLink;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlockType> BlockType
        {
            get
            {
                if ((_BlockType == null))
                {
                    _BlockType = base.CreateObjectSet<BlockType>("BlockType");
                }
                return _BlockType;
            }
        }
        private ObjectSet<BlockType> _BlockType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TVService> Service
        {
            get
            {
                if ((_Service == null))
                {
                    _Service = base.CreateObjectSet<TVService>("Service");
                }
                return _Service;
            }
        }
        private ObjectSet<TVService> _Service;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceBlock> ServiceBlock
        {
            get
            {
                if ((_ServiceBlock == null))
                {
                    _ServiceBlock = base.CreateObjectSet<ServiceBlock>("ServiceBlock");
                }
                return _ServiceBlock;
            }
        }
        private ObjectSet<ServiceBlock> _ServiceBlock;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceType> ServiceType
        {
            get
            {
                if ((_ServiceType == null))
                {
                    _ServiceType = base.CreateObjectSet<ServiceType>("ServiceType");
                }
                return _ServiceType;
            }
        }
        private ObjectSet<ServiceType> _ServiceType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tariff> Tariff
        {
            get
            {
                if ((_Tariff == null))
                {
                    _Tariff = base.CreateObjectSet<Tariff>("Tariff");
                }
                return _Tariff;
            }
        }
        private ObjectSet<Tariff> _Tariff;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceNumber> ServiceNumbers
        {
            get
            {
                if ((_ServiceNumbers == null))
                {
                    _ServiceNumbers = base.CreateObjectSet<ServiceNumber>("ServiceNumbers");
                }
                return _ServiceNumbers;
            }
        }
        private ObjectSet<ServiceNumber> _ServiceNumbers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Token> Token
        {
            get
            {
                if ((_Token == null))
                {
                    _Token = base.CreateObjectSet<Token>("Token");
                }
                return _Token;
            }
        }
        private ObjectSet<Token> _Token;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TokenRegex> TokenRegex
        {
            get
            {
                if ((_TokenRegex == null))
                {
                    _TokenRegex = base.CreateObjectSet<TokenRegex>("TokenRegex");
                }
                return _TokenRegex;
            }
        }
        private ObjectSet<TokenRegex> _TokenRegex;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Block EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlock(Block block)
        {
            base.AddObject("Block", block);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlockEntry EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlockEntry(BlockEntry blockEntry)
        {
            base.AddObject("BlockEntry", blockEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlockLink EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlockLink(BlockLink blockLink)
        {
            base.AddObject("BlockLink", blockLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlockType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlockType(BlockType blockType)
        {
            base.AddObject("BlockType", blockType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Service EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToService(TVService tVService)
        {
            base.AddObject("Service", tVService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceBlock EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceBlock(ServiceBlock serviceBlock)
        {
            base.AddObject("ServiceBlock", serviceBlock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceType(ServiceType serviceType)
        {
            base.AddObject("ServiceType", serviceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tariff EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTariff(Tariff tariff)
        {
            base.AddObject("Tariff", tariff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceNumbers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceNumbers(ServiceNumber serviceNumber)
        {
            base.AddObject("ServiceNumbers", serviceNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Token EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToToken(Token token)
        {
            base.AddObject("Token", token);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TokenRegex EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTokenRegex(TokenRegex tokenRegex)
        {
            base.AddObject("TokenRegex", tokenRegex);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="Block")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Block : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Block object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="blockTypeId">Initial value of the BlockTypeId property.</param>
        /// <param name="settings">Initial value of the Settings property.</param>
        public static Block CreateBlock(global::System.Guid id, global::System.Guid blockTypeId, global::System.String settings)
        {
            Block block = new Block();
            block.Id = id;
            block.BlockTypeId = blockTypeId;
            block.Settings = settings;
            return block;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BlockTypeId
        {
            get
            {
                return _BlockTypeId;
            }
            set
            {
                OnBlockTypeIdChanging(value);
                ReportPropertyChanging("BlockTypeId");
                _BlockTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockTypeId");
                OnBlockTypeIdChanged();
            }
        }
        private global::System.Guid _BlockTypeId;
        partial void OnBlockTypeIdChanging(global::System.Guid value);
        partial void OnBlockTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Settings
        {
            get
            {
                return _Settings;
            }
            set
            {
                OnSettingsChanging(value);
                ReportPropertyChanging("Settings");
                _Settings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Settings");
                OnSettingsChanged();
            }
        }
        private global::System.String _Settings;
        partial void OnSettingsChanging(global::System.String value);
        partial void OnSettingsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="BlockEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlockEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlockEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="serviceBlockId">Initial value of the ServiceBlockId property.</param>
        /// <param name="blockId">Initial value of the BlockId property.</param>
        /// <param name="isVerification">Initial value of the IsVerification property.</param>
        public static BlockEntry CreateBlockEntry(global::System.Guid id, global::System.Guid serviceBlockId, global::System.Guid blockId, global::System.Boolean isVerification)
        {
            BlockEntry blockEntry = new BlockEntry();
            blockEntry.Id = id;
            blockEntry.ServiceBlockId = serviceBlockId;
            blockEntry.BlockId = blockId;
            blockEntry.IsVerification = isVerification;
            return blockEntry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ServiceBlockId
        {
            get
            {
                return _ServiceBlockId;
            }
            set
            {
                OnServiceBlockIdChanging(value);
                ReportPropertyChanging("ServiceBlockId");
                _ServiceBlockId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceBlockId");
                OnServiceBlockIdChanged();
            }
        }
        private global::System.Guid _ServiceBlockId;
        partial void OnServiceBlockIdChanging(global::System.Guid value);
        partial void OnServiceBlockIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BlockId
        {
            get
            {
                return _BlockId;
            }
            set
            {
                OnBlockIdChanging(value);
                ReportPropertyChanging("BlockId");
                _BlockId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlockId");
                OnBlockIdChanged();
            }
        }
        private global::System.Guid _BlockId;
        partial void OnBlockIdChanging(global::System.Guid value);
        partial void OnBlockIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVerification
        {
            get
            {
                return _IsVerification;
            }
            set
            {
                OnIsVerificationChanging(value);
                ReportPropertyChanging("IsVerification");
                _IsVerification = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVerification");
                OnIsVerificationChanged();
            }
        }
        private global::System.Boolean _IsVerification;
        partial void OnIsVerificationChanging(global::System.Boolean value);
        partial void OnIsVerificationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="BlockLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlockLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlockLink object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="childId">Initial value of the ChildId property.</param>
        /// <param name="kind">Initial value of the Kind property.</param>
        public static BlockLink CreateBlockLink(global::System.Guid id, global::System.Guid parentId, global::System.Guid childId, global::System.Boolean kind)
        {
            BlockLink blockLink = new BlockLink();
            blockLink.Id = id;
            blockLink.ParentId = parentId;
            blockLink.ChildId = childId;
            blockLink.Kind = kind;
            return blockLink;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.Guid _ParentId;
        partial void OnParentIdChanging(global::System.Guid value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChildId
        {
            get
            {
                return _ChildId;
            }
            set
            {
                OnChildIdChanging(value);
                ReportPropertyChanging("ChildId");
                _ChildId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildId");
                OnChildIdChanged();
            }
        }
        private global::System.Guid _ChildId;
        partial void OnChildIdChanging(global::System.Guid value);
        partial void OnChildIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Kind
        {
            get
            {
                return _Kind;
            }
            set
            {
                OnKindChanging(value);
                ReportPropertyChanging("Kind");
                _Kind = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Kind");
                OnKindChanged();
            }
        }
        private global::System.Boolean _Kind;
        partial void OnKindChanging(global::System.Boolean value);
        partial void OnKindChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="BlockType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlockType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlockType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static BlockType CreateBlockType(global::System.Guid id)
        {
            BlockType blockType = new BlockType();
            blockType.Id = id;
            return blockType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="ServiceBlock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceBlock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceBlock object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        public static ServiceBlock CreateServiceBlock(global::System.Guid id, global::System.Guid serviceId)
        {
            ServiceBlock serviceBlock = new ServiceBlock();
            serviceBlock.Id = id;
            serviceBlock.ServiceId = serviceId;
            return serviceBlock;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private global::System.Guid _ServiceId;
        partial void OnServiceIdChanging(global::System.Guid value);
        partial void OnServiceIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="ServiceNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceNumber object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ServiceNumber CreateServiceNumber(global::System.Guid id)
        {
            ServiceNumber serviceNumber = new ServiceNumber();
            serviceNumber.Id = id;
            return serviceNumber;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SN
        {
            get
            {
                return _SN;
            }
            set
            {
                OnSNChanging(value);
                ReportPropertyChanging("SN");
                _SN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SN");
                OnSNChanged();
            }
        }
        private global::System.String _SN;
        partial void OnSNChanging(global::System.String value);
        partial void OnSNChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="ServiceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ServiceType CreateServiceType(global::System.Guid id)
        {
            ServiceType serviceType = new ServiceType();
            serviceType.Id = id;
            return serviceType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="Tariff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tariff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tariff object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="operatorId">Initial value of the OperatorId property.</param>
        /// <param name="serviceNumberId">Initial value of the ServiceNumberId property.</param>
        /// <param name="tarifficationType">Initial value of the TarifficationType property.</param>
        /// <param name="currencyId">Initial value of the CurrencyId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Tariff CreateTariff(global::System.Guid id, global::System.Guid operatorId, global::System.Guid serviceNumberId, global::System.Byte tarifficationType, global::System.Guid currencyId, global::System.Decimal amount)
        {
            Tariff tariff = new Tariff();
            tariff.Id = id;
            tariff.OperatorId = operatorId;
            tariff.ServiceNumberId = serviceNumberId;
            tariff.TarifficationType = tarifficationType;
            tariff.CurrencyId = currencyId;
            tariff.Amount = amount;
            return tariff;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperatorId
        {
            get
            {
                return _OperatorId;
            }
            set
            {
                OnOperatorIdChanging(value);
                ReportPropertyChanging("OperatorId");
                _OperatorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperatorId");
                OnOperatorIdChanged();
            }
        }
        private global::System.Guid _OperatorId;
        partial void OnOperatorIdChanging(global::System.Guid value);
        partial void OnOperatorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ServiceNumberId
        {
            get
            {
                return _ServiceNumberId;
            }
            set
            {
                OnServiceNumberIdChanging(value);
                ReportPropertyChanging("ServiceNumberId");
                _ServiceNumberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceNumberId");
                OnServiceNumberIdChanged();
            }
        }
        private global::System.Guid _ServiceNumberId;
        partial void OnServiceNumberIdChanging(global::System.Guid value);
        partial void OnServiceNumberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte TarifficationType
        {
            get
            {
                return _TarifficationType;
            }
            set
            {
                OnTarifficationTypeChanging(value);
                ReportPropertyChanging("TarifficationType");
                _TarifficationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TarifficationType");
                OnTarifficationTypeChanged();
            }
        }
        private global::System.Byte _TarifficationType;
        partial void OnTarifficationTypeChanging(global::System.Byte value);
        partial void OnTarifficationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OperatorParameters
        {
            get
            {
                return _OperatorParameters;
            }
            set
            {
                OnOperatorParametersChanging(value);
                ReportPropertyChanging("OperatorParameters");
                _OperatorParameters = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OperatorParameters");
                OnOperatorParametersChanged();
            }
        }
        private global::System.String _OperatorParameters;
        partial void OnOperatorParametersChanging(global::System.String value);
        partial void OnOperatorParametersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private global::System.Guid _CurrencyId;
        partial void OnCurrencyIdChanging(global::System.Guid value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="Token")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Token : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Token object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Token CreateToken(global::System.Guid id)
        {
            Token token = new Token();
            token.Id = id;
            return token;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="TokenRegex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TokenRegex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TokenRegex object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tokenId">Initial value of the TokenId property.</param>
        /// <param name="regex">Initial value of the Regex property.</param>
        public static TokenRegex CreateTokenRegex(global::System.Guid id, global::System.Guid tokenId, global::System.String regex)
        {
            TokenRegex tokenRegex = new TokenRegex();
            tokenRegex.Id = id;
            tokenRegex.TokenId = tokenId;
            tokenRegex.Regex = regex;
            return tokenRegex;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TokenId
        {
            get
            {
                return _TokenId;
            }
            set
            {
                OnTokenIdChanging(value);
                ReportPropertyChanging("TokenId");
                _TokenId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TokenId");
                OnTokenIdChanged();
            }
        }
        private global::System.Guid _TokenId;
        partial void OnTokenIdChanging(global::System.Guid value);
        partial void OnTokenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Regex
        {
            get
            {
                return _Regex;
            }
            set
            {
                OnRegexChanging(value);
                ReportPropertyChanging("Regex");
                _Regex = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Regex");
                OnRegexChanged();
            }
        }
        private global::System.String _Regex;
        partial void OnRegexChanging(global::System.String value);
        partial void OnRegexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TokenText
        {
            get
            {
                return _TokenText;
            }
            set
            {
                OnTokenTextChanging(value);
                ReportPropertyChanging("TokenText");
                _TokenText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TokenText");
                OnTokenTextChanged();
            }
        }
        private global::System.String _TokenText;
        partial void OnTokenTextChanging(global::System.String value);
        partial void OnTokenTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RouterModel", Name="TVService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TVService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TVService object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="serviceTypeId">Initial value of the ServiceTypeId property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static TVService CreateTVService(global::System.Guid id, global::System.Guid serviceTypeId, global::System.Int32 state)
        {
            TVService tVService = new TVService();
            tVService.Id = id;
            tVService.ServiceTypeId = serviceTypeId;
            tVService.State = state;
            return tVService;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ServiceTypeId
        {
            get
            {
                return _ServiceTypeId;
            }
            set
            {
                OnServiceTypeIdChanging(value);
                ReportPropertyChanging("ServiceTypeId");
                _ServiceTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceTypeId");
                OnServiceTypeIdChanged();
            }
        }
        private global::System.Guid _ServiceTypeId;
        partial void OnServiceTypeIdChanging(global::System.Guid value);
        partial void OnServiceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ServiceNumberId
        {
            get
            {
                return _ServiceNumberId;
            }
            set
            {
                OnServiceNumberIdChanging(value);
                ReportPropertyChanging("ServiceNumberId");
                _ServiceNumberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceNumberId");
                OnServiceNumberIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ServiceNumberId;
        partial void OnServiceNumberIdChanging(Nullable<global::System.Guid> value);
        partial void OnServiceNumberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TokenId
        {
            get
            {
                return _TokenId;
            }
            set
            {
                OnTokenIdChanging(value);
                ReportPropertyChanging("TokenId");
                _TokenId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TokenId");
                OnTokenIdChanged();
            }
        }
        private Nullable<global::System.Guid> _TokenId;
        partial void OnTokenIdChanging(Nullable<global::System.Guid> value);
        partial void OnTokenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifier
        {
            get
            {
                return _LastModifier;
            }
            set
            {
                OnLastModifierChanging(value);
                ReportPropertyChanging("LastModifier");
                _LastModifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifier");
                OnLastModifierChanged();
            }
        }
        private global::System.String _LastModifier;
        partial void OnLastModifierChanging(global::System.String value);
        partial void OnLastModifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RouterModel", "FK_Service_Service_TokenId", "Token")]
        public Token Token
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Token>("RouterModel.FK_Service_Service_TokenId", "Token").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Token>("RouterModel.FK_Service_Service_TokenId", "Token").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Token> TokenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Token>("RouterModel.FK_Service_Service_TokenId", "Token");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Token>("RouterModel.FK_Service_Service_TokenId", "Token", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
